"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

CSRF_TRUSTED_ORIGINS=['https://hanna-prodigy-ent-dev-backend-98b5967e61e5.herokuapp.com', 'https://hanna-prodigy-ent-dev-backend.onrender.com']

# CORS_ALLOWED_ORIGINS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'daphne',
    # 'django_celery_beat',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    'hanna.apps.HannaConfig',
    'channels',
    'celery',
    'django_celery_results',

]

CELERY_BROKER_URL = os.getenv('REDIS_URL', 'redis://localhost:6379/0')
CELERY_RESULT_BACKEND = os.getenv('REDIS_URL', 'redis://localhost:6379/0')

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.

    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        # 'rest_framework.renderers.BrowsableAPIRenderer',
    ),

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ),

    # 'DEFAULT_PERMISSION_CLASSES': (
    #     "rest_framework.permissions.IsAuthenticated",
    # ),

    'DEFAULT_PAGINATION_CLASS': "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 1,
}


OPENAI_API_KEY = os.environ.get('DEEPINFRA')

# GPT_MODEL_1 = "mistralai/Mistral-7B-Instruct-v0.3"

GPT_MODEL_1 = "meta-llama/Meta-Llama-3.1-8B-Instruct"

# GPT_MODEL_1 = "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo"


# GPT_MODEL_2 = "mistralai/Mixtral-8x22B-Instruct-v0.1"

# GPT_MODEL_2 = "microsoft/WizardLM-2-8x22B"

GPT_MODEL_2 = "meta-llama/Meta-Llama-3.1-70B-Instruct"

# GPT_MODEL_2 = "meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo"

GPT_MODEL_3 = "meta-llama/Meta-Llama-3.1-405B-Instruct"

BASE_URL = "https://api.deepinfra.com/v1/openai"


COHERE_API_KEY = os.environ.get("COHERE_API_KEY")
WEAVIATE_API_KEY = os.environ.get('WEAVIATE_API_KEY')
WEAVIATE_URL = os.environ.get('WEAVIATE_URL')
ANTHROPIC_API_KEY = os.environ.get('ANTHROPIC_API_KEY')
TOGETHER_API_KEY = os.environ.get('TOGETHER_API_KEY')
AWS_ACCESS_KEY = os.environ.get('AWS_ACCESS_KEY')
AWS_SECRET_KEY = os.environ.get('AWS_SECRET_KEY')
BUCKET_NAME = os.environ.get('BUCKET_NAME')
FILE_BUCKET_NAME = os.environ.get('FILE_BUCKET_NAME')

ROOT_URLCONF = 'main.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True




# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = BASE_DIR / 'static'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True

# Allow specific methods, including POST
CORS_ALLOW_METHODS = ["GET", "POST", "OPTIONS"]

# Allow specific headers
CORS_ALLOW_HEADERS = ["Content-Type", "Authorization"]

# Channels configuration
ASGI_APPLICATION = 'main.asgi.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [os.environ.get('REDIS_URL')],
        },
    },
}
